<class>
class<keyword>	</keyword>
Main<identifier>	</identifier>
	<symbol>{		</symbol>
	<subroutineDec>
function<keyword>		</keyword>
void<keyword>		</keyword>
main<identifier>		</identifier>
		<symbol>(				</symbol>
		<parameterList>
		</parameterList>
		<symbol>)				</symbol>
		<subroutineBody>
			<symbol>{						</symbol>
			<varDec>
var<keyword>				</keyword>
Array<identifier>					</identifier>
a<identifier>				</identifier>
				<symbol>;								</symbol>
			</varDec>
			<varDec>
var<keyword>				</keyword>
int<keyword>					</keyword>
length<identifier>				</identifier>
				<symbol>;								</symbol>
			</varDec>
			<varDec>
var<keyword>				</keyword>
int<keyword>					</keyword>
i<identifier>				</identifier>
				<symbol>,								</symbol>
sum<identifier>				</identifier>
				<symbol>;								</symbol>
			</varDec>
			<statements>
				<letStatement>
let<keyword>					</keyword>
length<identifier>					</identifier>
					<symbol>=										</symbol>
					<expression>
						<term>
Keyboard<identifier>								</identifier>
								<symbol>.																</symbol>
readInt<identifier>								</identifier>
								<symbol>(																</symbol>
								<expressionList>
									<expression>
										<term>
HOW MANY NUMBERS? <stringConstant>											</stringConstant>
										</term>
									</expression>
								</expressionList>
								<symbol>)																</symbol>
						</term>
					</expression>
					<symbol>;										</symbol>
				</letStatement>
				<letStatement>
let<keyword>					</keyword>
a<identifier>					</identifier>
					<symbol>=										</symbol>
					<expression>
						<term>
Array<identifier>								</identifier>
								<symbol>.																</symbol>
new<identifier>								</identifier>
								<symbol>(																</symbol>
								<expressionList>
									<expression>
										<term>
length<identifier>											</identifier>
										</term>
									</expression>
								</expressionList>
								<symbol>)																</symbol>
						</term>
					</expression>
					<symbol>;										</symbol>
				</letStatement>
				<letStatement>
let<keyword>					</keyword>
i<identifier>					</identifier>
					<symbol>=										</symbol>
					<expression>
						<term>
0<integerConstant>							</integerConstant>
						</term>
					</expression>
					<symbol>;										</symbol>
				</letStatement>
				<whileStatement>
while<keyword>					</keyword>
					<symbol>(										</symbol>
					<expression>
						<term>
i<identifier>							</identifier>
						</term>
						<symbol>						&lt;						</symbol>
						<term>
length<identifier>							</identifier>
						</term>
					</expression>
					<symbol>)										</symbol>
					<symbol>{										</symbol>
					<statements>
						<letStatement>
let<keyword>							</keyword>
a<identifier>							</identifier>
							<symbol>[														</symbol>
							<expression>
								<term>
i<identifier>									</identifier>
								</term>
							</expression>
							<symbol>]														</symbol>
							<symbol>=														</symbol>
							<expression>
								<term>
Keyboard<identifier>										</identifier>
										<symbol>.																				</symbol>
readInt<identifier>										</identifier>
										<symbol>(																				</symbol>
										<expressionList>
											<expression>
												<term>
ENTER THE NEXT NUMBER: <stringConstant>													</stringConstant>
												</term>
											</expression>
										</expressionList>
										<symbol>)																				</symbol>
								</term>
							</expression>
							<symbol>;														</symbol>
						</letStatement>
						<letStatement>
let<keyword>							</keyword>
i<identifier>							</identifier>
							<symbol>=														</symbol>
							<expression>
								<term>
i<identifier>									</identifier>
								</term>
								<symbol>+																</symbol>
								<term>
1<integerConstant>									</integerConstant>
								</term>
							</expression>
							<symbol>;														</symbol>
						</letStatement>
					</statements>
					<symbol>}										</symbol>
				</whileStatement>
				<letStatement>
let<keyword>					</keyword>
i<identifier>					</identifier>
					<symbol>=										</symbol>
					<expression>
						<term>
0<integerConstant>							</integerConstant>
						</term>
					</expression>
					<symbol>;										</symbol>
				</letStatement>
				<letStatement>
let<keyword>					</keyword>
sum<identifier>					</identifier>
					<symbol>=										</symbol>
					<expression>
						<term>
0<integerConstant>							</integerConstant>
						</term>
					</expression>
					<symbol>;										</symbol>
				</letStatement>
				<whileStatement>
while<keyword>					</keyword>
					<symbol>(										</symbol>
					<expression>
						<term>
i<identifier>							</identifier>
						</term>
						<symbol>						&lt;						</symbol>
						<term>
length<identifier>							</identifier>
						</term>
					</expression>
					<symbol>)										</symbol>
					<symbol>{										</symbol>
					<statements>
						<letStatement>
let<keyword>							</keyword>
sum<identifier>							</identifier>
							<symbol>=														</symbol>
							<expression>
								<term>
sum<identifier>									</identifier>
								</term>
								<symbol>+																</symbol>
								<term>
a<identifier>									</identifier>
									<symbol>[																		</symbol>
									<expression>
										<term>
i<identifier>											</identifier>
										</term>
									</expression>
									<symbol>]																		</symbol>
								</term>
							</expression>
							<symbol>;														</symbol>
						</letStatement>
						<letStatement>
let<keyword>							</keyword>
i<identifier>							</identifier>
							<symbol>=														</symbol>
							<expression>
								<term>
i<identifier>									</identifier>
								</term>
								<symbol>+																</symbol>
								<term>
1<integerConstant>									</integerConstant>
								</term>
							</expression>
							<symbol>;														</symbol>
						</letStatement>
					</statements>
					<symbol>}										</symbol>
				</whileStatement>
				<doStatement>
do<keyword>					</keyword>
Output<identifier>						</identifier>
						<symbol>.												</symbol>
printString<identifier>						</identifier>
						<symbol>(												</symbol>
						<expressionList>
							<expression>
								<term>
THE AVERAGE IS: <stringConstant>									</stringConstant>
								</term>
							</expression>
						</expressionList>
						<symbol>)												</symbol>
					<symbol>;										</symbol>
				</doStatement>
				<doStatement>
do<keyword>					</keyword>
Output<identifier>						</identifier>
						<symbol>.												</symbol>
printInt<identifier>						</identifier>
						<symbol>(												</symbol>
						<expressionList>
							<expression>
								<term>
sum<identifier>									</identifier>
								</term>
								<symbol>/																</symbol>
								<term>
length<identifier>									</identifier>
								</term>
							</expression>
						</expressionList>
						<symbol>)												</symbol>
					<symbol>;										</symbol>
				</doStatement>
				<doStatement>
do<keyword>					</keyword>
Output<identifier>						</identifier>
						<symbol>.												</symbol>
println<identifier>						</identifier>
						<symbol>(												</symbol>
						<expressionList>
						</expressionList>
						<symbol>)												</symbol>
					<symbol>;										</symbol>
				</doStatement>
				<returnStatement>
return<keyword>					</keyword>
					<symbol>;										</symbol>
				</returnStatement>
			</statements>
			<symbol>}						</symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol>}		</symbol>
</class>
