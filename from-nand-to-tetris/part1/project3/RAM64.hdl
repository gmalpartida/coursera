// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // select the 8 register block
    DMux8Way(in=load,sel=address[3..5],a=tmpa,b=tmpb,c=tmpc,
    d=tmpd,e=tmpe,f=tmpf,g=tmpg,h=tmph);

    // update the register stored value
    RAM8(in=in,load=tmpa,address=address[0..2],out=outa);
    RAM8(in=in,load=tmpb,address=address[0..2],out=outb);
    RAM8(in=in,load=tmpc,address=address[0..2],out=outc);
    RAM8(in=in,load=tmpd,address=address[0..2],out=outd);
    RAM8(in=in,load=tmpe,address=address[0..2],out=oute);
    RAM8(in=in,load=tmpf,address=address[0..2],out=outf);
    RAM8(in=in,load=tmpg,address=address[0..2],out=outg);
    RAM8(in=in,load=tmph,address=address[0..2],out=outh);

    // set register output 
    Mux8Way16(a=outa,b=outb,c=outc,d=outd,e=oute,
    f=outf,g=outg,h=outh,sel=address[3..5],out=out);
}